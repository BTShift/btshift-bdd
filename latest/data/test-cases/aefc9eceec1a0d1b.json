{"uid":"aefc9eceec1a0d1b","name":"should get client by ID with typed client","fullName":"api/features/client-management/crud-operations/happy-path/typed-client-crud.api.spec.ts:73:7","historyId":"439539d2448e8b7761192a71c94a907e:5bd835b0d6b1d4ada3b9f0db936e82c8","time":{"start":1757667280023,"stop":1757667280353,"duration":330},"status":"failed","statusMessage":"Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"Get Test Client 1757667280587\"\nReceived: undefined","statusTrace":"Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"Get Test Client 1757667280587\"\nReceived: undefined\n    at /home/runner/work/btshift-bdd/btshift-bdd/tests/api/features/client-management/crud-operations/happy-path/typed-client-crud.api.spec.ts:94:35","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"Get Test Client 1757667280587\"\nReceived: undefined","statusTrace":"Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"Get Test Client 1757667280587\"\nReceived: undefined\n    at /home/runner/work/btshift-bdd/btshift-bdd/tests/api/features/client-management/crud-operations/happy-path/typed-client-crud.api.spec.ts:94:35","steps":[{"name":"Before Hooks","time":{"start":1757667280025,"stop":1757667280587,"duration":562},"status":"passed","steps":[{"name":"beforeAll hook","time":{"start":1757667280025,"stop":1757667280580,"duration":555},"status":"passed","steps":[{"name":"Attach \"Allure Metadata (metadata)\"","time":{"start":1757667280102,"stop":1757667280102,"duration":0},"status":"unknown","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Attach \"Allure Metadata (metadata)\"","time":{"start":1757667280103,"stop":1757667280103,"duration":0},"status":"unknown","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Attach \"Allure Metadata (metadata)\"","time":{"start":1757667280104,"stop":1757667280104,"duration":0},"status":"unknown","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":3,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Fixture \"autoTestContext\"","time":{"start":1757667280586,"stop":1757667280587,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":5,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Expect \"toBeDefined\"","time":{"start":1757667280909,"stop":1757667280910,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expect \"toBe\"","time":{"start":1757667280910,"stop":1757667280911,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expect \"toBe\"","time":{"start":1757667280911,"stop":1757667280913,"duration":2},"status":"failed","statusMessage":"Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"Get Test Client 1757667280587\"\nReceived: undefined","statusTrace":"Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"Get Test Client 1757667280587\"\nReceived: undefined\n    at /home/runner/work/btshift-bdd/btshift-bdd/tests/api/features/client-management/crud-operations/happy-path/typed-client-crud.api.spec.ts:94:35","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"After Hooks","time":{"start":1757667280914,"stop":1757667281106,"duration":192},"status":"passed","steps":[{"name":"Fixture \"autoTestContext\"","time":{"start":1757667280915,"stop":1757667280916,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"afterAll hook","time":{"start":1757667280925,"stop":1757667281106,"duration":181},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":2,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"96d09059ff11313b","name":"stdout","source":"96d09059ff11313b.txt","type":"text/plain","size":4388}],"parameters":[],"stepsCount":12,"shouldDisplayMessage":false,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"playwright"},{"name":"package","value":"api.features.client-management.crud-operations.happy-path.typed-client-crud.api.spec.ts"},{"name":"titlePath","value":" > chromium > api/features/client-management/crud-operations/happy-path/typed-client-crud.api.spec.ts > Client Management - CRUD with Typed NPM Packages"},{"name":"host","value":"runnervmf4ws1"},{"name":"thread","value":"pid-2660-worker-0"},{"name":"parentSuite","value":"\uD83D\uDC65 Client Services"},{"name":"suite","value":"Client Operations"},{"name":"subSuite","value":"Client Management - CRUD with Typed NPM Packages"},{"name":"feature","value":"Client Relationship Management"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Project","value":"chromium"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":41,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":41},"items":[{"uid":"eadbcdec29eff300","reportUrl":"https://BTShift.github.io/btshift-bdd/68/#testresult/eadbcdec29eff300","status":"failed","statusDetails":"Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"Get Test Client 1757666995786\"\nReceived: undefined","time":{"start":1757666995145,"stop":1757666995463,"duration":318}},{"uid":"2b3043b5f95ca198","reportUrl":"https://BTShift.github.io/btshift-bdd/67/#testresult/2b3043b5f95ca198","status":"failed","statusDetails":"Error: HTTP 400: Bad Request","time":{"start":1757664384115,"stop":1757664384387,"duration":272}},{"uid":"f0f044ef0c9564ad","reportUrl":"https://BTShift.github.io/btshift-bdd/66/#testresult/f0f044ef0c9564ad","status":"failed","statusDetails":"Error: HTTP 400: Bad Request","time":{"start":1757663527834,"stop":1757663528169,"duration":335}},{"uid":"37ece36ebb5c6271","reportUrl":"https://BTShift.github.io/btshift-bdd/65/#testresult/37ece36ebb5c6271","status":"failed","statusDetails":"Error: HTTP 400: Bad Request","time":{"start":1757661530005,"stop":1757661530466,"duration":461}},{"uid":"33009d6f55a7cc1a","reportUrl":"https://BTShift.github.io/btshift-bdd/64/#testresult/33009d6f55a7cc1a","status":"failed","statusDetails":"Error: HTTP 400: Bad Request","time":{"start":1757625731038,"stop":1757625731518,"duration":480}},{"uid":"7d050249db9ea614","reportUrl":"https://BTShift.github.io/btshift-bdd/63/#testresult/7d050249db9ea614","status":"failed","statusDetails":"Error: HTTP 409: Conflict","time":{"start":1757617081152,"stop":1757617081576,"duration":424}},{"uid":"934cc5f36bbbf52c","reportUrl":"https://BTShift.github.io/btshift-bdd/62/#testresult/934cc5f36bbbf52c","status":"failed","statusDetails":"Error: HTTP 409: Conflict","time":{"start":1757615150642,"stop":1757615150961,"duration":319}},{"uid":"51944f6c7a0c5304","reportUrl":"https://BTShift.github.io/btshift-bdd/61/#testresult/51944f6c7a0c5304","status":"failed","statusDetails":"Error: HTTP 409: Conflict","time":{"start":1757613449677,"stop":1757613450084,"duration":407}},{"uid":"b1b907bf02599c39","reportUrl":"https://BTShift.github.io/btshift-bdd/60/#testresult/b1b907bf02599c39","status":"failed","statusDetails":"Error: HTTP 409: Conflict","time":{"start":1757611856829,"stop":1757611857036,"duration":207}},{"uid":"4d4fbb84590c37f7","reportUrl":"https://BTShift.github.io/btshift-bdd/59/#testresult/4d4fbb84590c37f7","status":"failed","statusDetails":"Error: HTTP 409: Conflict","time":{"start":1757606421057,"stop":1757606421395,"duration":338}},{"uid":"339b26ad5634f9a3","reportUrl":"https://BTShift.github.io/btshift-bdd/58/#testresult/339b26ad5634f9a3","status":"failed","statusDetails":"Error: HTTP 409: Conflict","time":{"start":1757601059030,"stop":1757601059443,"duration":413}},{"uid":"74315660773a42e9","reportUrl":"https://BTShift.github.io/btshift-bdd/57/#testresult/74315660773a42e9","status":"failed","statusDetails":"Error: HTTP 409: Conflict","time":{"start":1757599335857,"stop":1757599336108,"duration":251}},{"uid":"36020151ddd61383","reportUrl":"https://BTShift.github.io/btshift-bdd/56/#testresult/36020151ddd61383","status":"failed","statusDetails":"Error: HTTP 409: Conflict","time":{"start":1757597811177,"stop":1757597811599,"duration":422}},{"uid":"731290245c8722b0","reportUrl":"https://BTShift.github.io/btshift-bdd/55/#testresult/731290245c8722b0","status":"failed","statusDetails":"Error: HTTP 500: Internal Server Error","time":{"start":1757595777918,"stop":1757595778532,"duration":614}},{"uid":"12228f6ab4349100","reportUrl":"https://BTShift.github.io/btshift-bdd/54/#testresult/12228f6ab4349100","status":"failed","statusDetails":"Error: HTTP 500: Internal Server Error","time":{"start":1757595143496,"stop":1757595144111,"duration":615}},{"uid":"edd1cb79050cef74","reportUrl":"https://BTShift.github.io/btshift-bdd/53/#testresult/edd1cb79050cef74","status":"failed","statusDetails":"Error: HTTP 500: Internal Server Error","time":{"start":1757581310437,"stop":1757581310637,"duration":200}},{"uid":"90c3ba4741cf1a7e","reportUrl":"https://BTShift.github.io/btshift-bdd/52/#testresult/90c3ba4741cf1a7e","status":"failed","statusDetails":"Error: HTTP 403: Forbidden","time":{"start":1757556481044,"stop":1757556481348,"duration":304}},{"uid":"1cda728620314200","reportUrl":"https://BTShift.github.io/btshift-bdd/51/#testresult/1cda728620314200","status":"failed","statusDetails":"Error: HTTP 403: Forbidden","time":{"start":1757541010901,"stop":1757541011276,"duration":375}},{"uid":"ad747a7332d60d90","reportUrl":"https://BTShift.github.io/btshift-bdd/50/#testresult/ad747a7332d60d90","status":"failed","statusDetails":"Error: HTTP 403: Forbidden","time":{"start":1757538542886,"stop":1757538543277,"duration":391}},{"uid":"7aa9a2170f572a25","reportUrl":"https://BTShift.github.io/btshift-bdd/49/#testresult/7aa9a2170f572a25","status":"failed","statusDetails":"Error: HTTP 403: Forbidden","time":{"start":1757537173584,"stop":1757537173798,"duration":214}}]},"tags":[]},"source":"aefc9eceec1a0d1b.json","parameterValues":["chromium"]}